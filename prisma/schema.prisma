generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model data_analysis {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  analysis_data String   @db.VarChar(255)
  user_id       String?  @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user          user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model engagement {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  engagement_score Int
  user_id          String?  @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  user             user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model erp_process {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  process_name      String   @db.VarChar(255)
  automation_status Boolean
  user_id           String?  @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  user              user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model gst_accounting {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gst_number      String   @db.VarChar(255)
  accounting_data String   @db.VarChar(255)
  user_id         String?  @db.Uuid
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  user            user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model performance_evaluation {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  evaluation_score Int
  user_id          String?  @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  user             user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model time_tracking {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  hours_logged Int
  user_id      String?  @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                     String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                  String                   @unique @db.VarChar(255)
  firstName              String?                  @db.VarChar(255)
  lastName               String?                  @db.VarChar(255)
  roq_user_id            String                   @db.VarChar(255)
  tenant_id              String                   @db.VarChar(255)
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  company                company[]
  data_analysis          data_analysis[]
  engagement             engagement[]
  erp_process            erp_process[]
  gst_accounting         gst_accounting[]
  performance_evaluation performance_evaluation[]
  time_tracking          time_tracking[]
}
